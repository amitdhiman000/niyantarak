#if 0
			std::int32_t revert;
			::Window focusedWindow;
			XGetInputFocus(display, &focusedWindow, &revert);

			unsigned int    modifiers       = 0;//ControlMask | ShiftMask;
			int             keycode         = 0; //::XKeysymToKeycode(display, XK_VoidSymbol);
			Window          grab_window     = window;
			Bool            owner_events    = False;
			int             pointer_mode    = GrabModeAsync;
			int             keyboard_mode   = GrabModeAsync;

			::XGrabKey(display, keycode, modifiers, grab_window, owner_events, pointer_mode,
			             keyboard_mode);

			//auto eventsMask = PointerMotionMask | ButtonPressMask | ButtonReleaseMask | KeyPressMask;
			//::XSelectInput(display, window, eventsMask);
#endif
			grabMouse();
			for(; !mStop; )
			{
#if 0
				int ret = XPending(display);
				if (ret == 0)
				{
					continue;
				}
				APP_LOGD("ret [%d]", ret);
#endif

#if 0
			int revert;
			Window winFocus;
			::XGetInputFocus(display, &winFocus, &revert);
			const auto eventsMask = PointerMotionMask | ButtonPressMask | ButtonReleaseMask | FocusChangeMask;
			XSelectInput(display, winFocus, eventsMask);
#endif

				//::XAllowEvents(display, AsyncBoth, CurrentTime);
				::XSendEvent(display, InputFocus, True, eventsMask, &xevent);
#if 0
				int revert;
				Window winFocus;
				::XGetInputFocus(display, &winFocus, &revert);
				xevent.xbutton.state = Mod2Mask;
				::XSendEvent(display, InputFocus, True, xevent.xbutton.type, &xevent);
				::XFlush(display);
#endif
